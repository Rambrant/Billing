
package mds_salesorderbasisline;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import com.tradedoubler.webservice.routing.schedulesalesorderbasisline.RoutingService;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;

/**
 * This class was generated by Apache CXF 2.6.1
 * 2013-03-20T13:23:29.092+01:00
 * Generated source version: 2.6.1
 * 
 */
public final class SalesOrderBasisLineProcessing_BasicHttpBindingSalesOrderBasisLineProcessing_Client {

    private static final QName SERVICE_NAME = new QName("http://tempuri.org/", "RoutingService");

    private SalesOrderBasisLineProcessing_BasicHttpBindingSalesOrderBasisLineProcessing_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = RoutingService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        RoutingService ss = new RoutingService(wsdlURL, SERVICE_NAME);
        SalesOrderBasisLineProcessing port = ss.getBasicHttpBindingSalesOrderBasisLineProcessing();  
        
        {
        System.out.println("Invoking scheduleOrderBasisLineProcessing...");
        mds_salesorderbasisline.SalesOrderBasisLineProcessingScheduleOrderBasisLineProcessingRequest _scheduleOrderBasisLineProcessing_parameters = null;
        com.microsoft.schemas.dynamics._2010._01.datacontracts.CallContext _scheduleOrderBasisLineProcessing_context = null;
        try {
            mds_salesorderbasisline.SalesOrderBasisLineProcessingScheduleOrderBasisLineProcessingResponse _scheduleOrderBasisLineProcessing__return = port.scheduleOrderBasisLineProcessing(_scheduleOrderBasisLineProcessing_parameters, _scheduleOrderBasisLineProcessing_context);
            System.out.println("scheduleOrderBasisLineProcessing.result=" + _scheduleOrderBasisLineProcessing__return);

        } catch (SalesOrderBasisLineProcessingScheduleOrderBasisLineProcessingAifFaultFaultFaultMessage e) { 
            System.out.println("Expected exception: SalesOrderBasisLineProcessing_scheduleOrderBasisLineProcessing_AifFaultFault_FaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
